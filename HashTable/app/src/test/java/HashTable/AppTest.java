/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package HashTable;

import HashTable.Structure.HashMap;
import org.junit.jupiter.api.Test;

import java.util.HashSet;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test
    public void testSetKeyValue() {
        HashMap<String, String> countryCities = new HashMap<>();
        countryCities.set("Jordan", "Amman");
        countryCities.set("United States", "Washington D.C.");
        countryCities.set("United Kingdom", "London");
        countryCities.set("Italy", "Rome");
        countryCities.set("France", "Paris");
        countryCities.set("Portugal", "Lisbon");
        int result = 6;
        int expected = countryCities.getSize();
        assertEquals(result, expected);

    }

    @Test
    public void testGetValueBasedOnKey() {
        HashMap<String, String> countryCities = new HashMap<>();
        countryCities.set("Jordan", "Amman");
        countryCities.set("United States", "Washington D.C.");
        countryCities.set("United Kingdom", "London");
        countryCities.set("Italy", "Rome");
        countryCities.set("France", "Paris");
        countryCities.set("Portugal", "Lisbon");
        String result = countryCities.get("Jordan");
        String expected = "Amman";
        assertEquals(result, expected);
    }

    @Test
    public void testNoKeyFound() {
        HashMap<String, String> countryCities = new HashMap<>();
        countryCities.set("Jordan", "Amman");
        countryCities.set("United States", "Washington D.C.");
        countryCities.set("United Kingdom", "London");
        countryCities.set("Italy", "Rome");
        countryCities.set("France", "Paris");
        countryCities.set("Portugal", "Lisbon");
        String result = countryCities.get("Brazil");
        String expected = null;
        assertEquals(result, expected);
    }

    @Test
    public void getAllKeys() {
        HashMap<String, String> countryCities = new HashMap<>();
        countryCities.set("Jordan", "Amman");
        countryCities.set("United States", "Washington D.C.");
        countryCities.set("United Kingdom", "London");
        countryCities.set("Italy", "Rome");
        countryCities.set("France", "Paris");
        countryCities.set("Portugal", "Lisbon");
        String result = countryCities.keys().toString();
        String expected = "[Jordan, Portugal, France, Italy, United Kingdom, United States]";
        assertEquals(result, expected);
    }

    @Test
    public void testContain() {
        HashMap<String, String> countryCities = new HashMap<>();
        countryCities.set("Jordan", "Amman");
        countryCities.set("United States", "Washington D.C.");
        countryCities.set("United Kingdom", "London");
        countryCities.set("Italy", "Rome");
        countryCities.set("France", "Paris");
        countryCities.set("Portugal", "Lisbon");
        List<String> keys = countryCities.keys();
        boolean result = keys.contains("Jordan");
        boolean expected = true;
        assertEquals(result, expected);

    }

    @Test
    public void testHashCode() {
        HashMap<String,String> countryCities=new HashMap<>();
        countryCities.set("Jordan","Amman");
        countryCities.set("United States","Washington D.C.");
        countryCities.set("United Kingdom","London");
        countryCities.set("Italy","Rome");
        countryCities.set("France","Paris");
        countryCities.set("Portugal","Lisbon");
        int result=countryCities.hashCode();
        int expected=1710814638;
        assertEquals(result,expected);

    }
}
