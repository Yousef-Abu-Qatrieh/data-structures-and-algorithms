/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import org.junit.jupiter.api.Test;

import java.util.Collection;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test
    public void addNodeTest() {
        Graph graph = new Graph();
        graph.addVertex("A");
        graph.addVertex("B");
        String expected = "[Vertex{data='A'weight='0'}, [], Vertex{data='B'weight='0'}, []]";
        String result = String.valueOf(graph.getVertices());
        assertEquals(expected, result);
    }

    @Test
    public void addEdgeTest() {
        Graph graph = new Graph();
        graph.addVertex("A");
        graph.addVertex("B");
        graph.addEdges("A", "B");
        String expected = "[Vertex{data='A'weight='0'}, [Vertex{data='B'weight='0'}], Vertex{data='B'weight='0'}, [Vertex{data='A'weight='0'}]]";
        List result = graph.getVertices();
        assertEquals(expected, result.toString());
    }

    @Test
    public void getNodeTest() {
        Graph graph = new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");
        graph.addEdges("A", "B");
        graph.addEdges("A", "C");
        String expected = "[Vertex{data='A'weight='0'}, [Vertex{data='B'weight='0'}, Vertex{data='C'weight='0'}], Vertex{data='B'weight='0'}, [Vertex{data='A'weight='0'}], Vertex{data='C'weight='0'}, [Vertex{data='A'weight='0'}]]";
        List result = graph.getVertices();
        assertEquals(expected, result.toString());
    }

    @Test
    public void getNeighborsTest() {
        Graph graph = new Graph();
        graph.addVertex("A");
        graph.addVertex("B");
        graph.addEdges("A", "B");
        String expected = "[[Vertex{data='B'weight='0'}], [Vertex{data='A'weight='0'}]]";
        Collection<List<Vertex>> result = graph.getNeighbors();
        assertEquals(expected, result.toString());
    }

    @Test
    public void getNeighborsWeightTest() {
        Graph graph = new Graph();
        graph.addVertex("A");
        graph.addVertex("B");
        graph.addEdge("A", "B", 1);
        String expected = "[[Vertex{data='B'weight='1'}], [Vertex{data='A'weight='1'}]]";
        Collection<List<Vertex>> result = graph.getNeighbors();
        assertEquals(expected, result.toString());
    }

    @Test
    public void getSizeTest() {
        Graph graph = new Graph();
        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");
        graph.addVertex("D");
        String expected = "4";
        int result = graph.size();
        assertEquals(expected, String.valueOf(result));
    }

    @Test
    public void getOneNodeAndEdgeTest() {
        Graph graph = new Graph();
        graph.addVertex("A");
        graph.addEdges("A", "A");
        String expected = "[Vertex{data='A'weight='0'}, [Vertex{data='A'weight='0'}, Vertex{data='A'weight='0'}]]";
        List result = graph.getVertices();
        assertEquals(expected, result.toString());
    }

    @Test
    public void emptyGraphTest() {
        Graph graph = new Graph();
        String expected = "" ;
        String result = graph.printGraph();
        assertEquals(expected, result);
    }
}
